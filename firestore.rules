service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow create, update: if request.auth.uid == userId
        && request.resource.data.size() == 1
        && 'name' in request.resource.data
        && request.resource.data.name is string
        && request.resource.data.name.size() == request.resource.data.name.trim().size()
        && request.resource.data.name.size() > 0;
      match /regions/{region} {
        allow read: if true;
        allow create: if request.auth.uid == userId
          && exists(/databases/$(database)/documents/users/$(userId))
          && request.resource.data.size() == 1
          && 'ts' in request.resource.data
          && request.resource.data.ts is timestamp
          && request.resource.data.ts == request.time;
      }
      match /items/{item} {
        allow read: if true;
        allow delete: if request.auth.uid == userId
          && !exists(/databases/$(database)/documents/users/$(userId)/details/$(item));
        allow create: if request.auth.uid == userId
          && request.resource.data.size() == 2
          && request.resource.data.keys().hasAll(['ts', 'region'])
          && request.resource.data.ts is timestamp
          && request.resource.data.ts == request.time
          && request.resource.data.region is string
          && exists(/databases/$(database)/documents/users/$(userId)/regions/$(request.resource.data.region))
      }
      match /details/{item} {
        allow read: if true;
        allow delete: if request.auth.uid == userId
          && resource.data.size() == 0;
        allow create, update: if request.auth.uid == userId
          && exists(/databases/$(database)/documents/users/$(userId)/items/$(item))
          && request.writeFields.size() == 1
          && request.writeFields[0] in [
              'Introduction',
              'Structure',
              'Superior relations',
              'Inferior relations',
              'Anterior relations',
              'Posterior relations',
              'Medial relations',
              'Lateral relations',
              'Superior boundary',
              'Inferior boundary',
              'Anterior boundary',
              'Posterior boundary',
              'Medial boundary',
              'Lateral boundary',
              'Contents',
              'Articulations',
              'Attachments',
              'Special structures',
              'Nerve supply',
              'Arterial supply',
              'Venous drainage',
              'Lymphatic drainage',
              'Variants'
            ]
          && (
            !(request.writeFields[0] in request.resource.data) || 
            request.resource.data[request.writeFields[0]] is list
          );
      }
    }
  }
}